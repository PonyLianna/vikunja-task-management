version: '3'
services:
  vikunja:
    env_file: ".env"
    image: vikunja/vikunja
    environment:
      VIKUNJA_DATABASE_HOST: ${VIKUNJA_DATABASE_HOST}
      VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_DATABASE_PASSWORD}
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: ${VIKUNJA_DATABASE_USER}
      VIKUNJA_DATABASE_DATABASE: ${VIKUNJA_DATABASE_DATABASE}
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_SERVICE_JWTSECRET}
    ports:
      - "${VIKUNJA_PORT}:3456"
    volumes:
      - ./files:/app/vikunja/files
    networks:
      - vikunja
      - database
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    env_file: ".env"
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./db/init.d:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      start_period: 30s
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - database

  n8n:
    env_file: ".env"
    build:
      context: .
      dockerfile: Dockerfile.n8n
    ports:
      - "${N8N_PORT}:5678"
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      # Database
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_HOST}
      - DB_POSTGRESDB_PORT=${DB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_DATABASE}
      # db creds
      - DB_POSTGRESDB_USER=${DB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
    networks:
      - vikunja
      - database
    volumes:
      - ./n8n_data:/home/node/.n8n
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  vikunja:
  database:
    driver: bridge